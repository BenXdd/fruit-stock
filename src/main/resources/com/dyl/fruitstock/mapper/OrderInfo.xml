<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace=".mapper.OrderInfoMapper">

    <resultMap type=".entity.OrderInfo" id="orderInfoResultMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="orderCode" column="order_code" jdbcType="VARCHAR"/>
        <result property="todayStr" column="today_str" jdbcType="VARCHAR"/>
        <result property="productInfo" column="product_info" jdbcType="VARCHAR"/>
        <result property="totalSalePrice" column="total_sale_price" jdbcType="NUMERIC"/>
        <result property="totalCostPrice" column="total_cost_price" jdbcType="NUMERIC"/>
        <result property="createTime" column="create_time" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="orderInfoBaseColumn">
        t.`id`,
        t.`order_code`,
        t.`today_str`,
        t.`product_info`,
        t.`total_sale_price`,
        t.`total_cost_price`,
        t.`create_time`,
        t.`update_time`

    </sql>

    <!--查询单个-->
    <select id="selectById" resultMap="orderInfoResultMap">
        SELECT
        <include refid="orderInfoBaseColumn"/>
        FROM `order_info` t
        WHERE t.`id` = #{id}
        
    </select>

    <select id="selectByIds" resultMap="orderInfoResultMap">
        SELECT
        <include refid="orderInfoBaseColumn"/>
        FROM `order_info` t
        WHERE t.`id` in (<foreach collection="list" index="index" item="item" separator=",">#{item}</foreach>)
        
    </select>

    <update id="updateById" parameterType=".entity.OrderInfo">
        UPDATE `order_info`
        <set>
            <if test="orderCode != null and orderCode != ''">
                `order_code` = #{orderCode},
            </if>
            <if test="todayStr != null and todayStr != ''">
                `today_str` = #{todayStr},
            </if>
            <if test="productInfo != null and productInfo != ''">
                `product_info` = #{productInfo},
            </if>
            <if test="totalSalePrice != null">
                `total_sale_price` = #{totalSalePrice},
            </if>
            <if test="totalCostPrice != null">
                `total_cost_price` = #{totalCostPrice},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime},
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime},
            </if>
        </set>
        WHERE `id` = #{id}
    </update>


    <sql id="orderInfoQueryCondition">
            <if test="q.orderCode != null and q.orderCode != ''">
               AND t.`order_code` = #{q.orderCode}
            </if>
            <if test="q.todayStr != null and q.todayStr != ''">
               AND t.`today_str` = #{q.todayStr}
            </if>
            <if test="q.productInfo != null and q.productInfo != ''">
               AND t.`product_info` = #{q.productInfo}
            </if>
            <if test="q.totalSalePrice != null">
               AND t.`total_sale_price` = #{q.totalSalePrice}
            </if>
            <if test="q.totalCostPrice != null">
               AND t.`total_cost_price` = #{q.totalCostPrice}
            </if>
            <if test="q.createTime != null">
               AND t.`create_time` = #{q.createTime}
            </if>
            <if test="q.updateTime != null">
               AND t.`update_time` = #{q.updateTime}
            </if>

    </sql>

    <!--通过实体作为筛选条件查询-->
    <select id="selectOne" resultMap="orderInfoResultMap">
        SELECT
        <include refid="orderInfoBaseColumn"/>
        FROM `order_info` t
        <where>
            <include refid="orderInfoQueryCondition"/>
        </where>
        LIMIT 1
    </select>
    
    <select id="select" resultMap="orderInfoResultMap">
        SELECT
        <include refid="orderInfoBaseColumn"/>
        FROM `order_info` t
        <where>
            <include refid="orderInfoQueryCondition"/>
        </where>
    </select>
    
    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into `order_info`(
            `order_code`,
            `today_str`,
            `product_info`,
            `total_sale_price`,
            `total_cost_price`,
            `create_time`,
            `update_time`
        ) VALUES (
        #{orderCode},
        #{todayStr},
        #{productInfo},
        #{totalSalePrice},
        #{totalCostPrice},
        #{createTime},
        #{updateTime}
        )
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into `order_info`(
            `order_code`,
            `today_str`,
            `product_info`,
            `total_sale_price`,
            `total_cost_price`,
            `create_time`,
            `update_time`
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
        (
                #{item.orderCode},
                #{item.todayStr},
                #{item.productInfo},
                #{item.totalSalePrice},
                #{item.totalCostPrice},
                #{item.createTime},
                #{item.updateTime}
        )
        </foreach>
    </insert>
    
    <!--新增or更新-->
    <insert id="insertOrUpdate" keyProperty="id" useGeneratedKeys="true">
        insert into `order_info`(
            `order_code`,
            `today_str`,
            `product_info`,
            `total_sale_price`,
            `total_cost_price`,
            `create_time`,
            `update_time`
        ) VALUES (
        #{orderCode},
        #{todayStr},
        #{productInfo},
        #{totalSalePrice},
        #{totalCostPrice},
        #{createTime},
        #{updateTime}
        )
    on duplicate key update
    order_code = values(order_code),
    today_str = values(today_str),
    product_info = values(product_info),
    total_sale_price = values(total_sale_price),
    total_cost_price = values(total_cost_price),
    create_time = values(create_time),
    update_time = values(update_time)
    </insert>
    
    

</mapper>
